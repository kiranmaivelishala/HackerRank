Task 
https://www.hackerrank.com/challenges/30-inheritance/problem

class Student extends Person{
	private int[] testScores;

    /*	
    *   Class Constructor
   
    *   
    *   @param firstName - A string denoting the Person's first name.
    *   @param lastName - A string denoting the Person's last name.
    *   @param id - An integer denoting the Person's ID number.
    *   @param scores - An array of integers denoting the Person's test scores.
    */
    // Write your constructor here
public Student( String firstName,String lastName,int idNumber,int [] scores1)
    {
   
     super(firstName,lastName,idNumber);
   
         this.testScores=scores1;
    }
    /*	
    *   Method Name: calculate
    *   @return A character denoting the grade.
    */
    // Write your method here
    public char calculate()
    {
        int sum=0;
        char res='b';
        int n=testScores.length;
        for(int l=0;l<n;l++)
        {
             sum=sum+testScores[l];
        }
        int avg=(sum)/n;
        if(avg >= 90 && avg <= 100)
        {
            res = 'O';
        }
        if(avg >= 80 && avg < 90)
        {
            res = 'E';
        }
      if(avg >= 70 && avg < 80)
        {
            res = 'A';
        }
      if(avg >= 55 && avg < 70)
        {
            res ='P';
        }
     if(avg >= 40 && avg < 55)
        {
            return 'D';
        }
       if(avg < 40 )
        {
            res ='T';
        }
        return res;
    }
}
class Solution {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		String firstName = scan.next();
		String lastName = scan.next();
		int id = scan.nextInt();
		int numScores = scan.nextInt();
		int[] testScores = new int[numScores];
		for(int i = 0; i < numScores; i++){
			testScores[i] = scan.nextInt();
		}
		scan.close();
		
		Student s = new Student(firstName, lastName, id, testScores);
		s.printPerson();
		System.out.println("Grade: " + s.calculate());
	}
}
